# Secrets for GoCars Testing Agent
apiVersion: v1
kind: Secret
metadata:
  name: testing-agent-secrets
  namespace: gocars-testing
  labels:
    app: gocars-testing-agent
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  REDIS_PASSWORD: dGVzdGluZ3Bhc3N3b3Jk  # testingpassword
  MONGO_PASSWORD: dGVzdGluZ3Bhc3N3b3Jk  # testingpassword
  POSTGRES_PASSWORD: cGFzc3dvcmQ=  # password
  JWT_SECRET: c3VwZXJzZWNyZXRqd3R0b2tlbmZvcnRlc3RpbmdhZ2VudA==  # supersecretjwttokenfortestingagent
  API_KEY: YXBpa2V5Zm9yZ29jYXJzdGVzdGluZ2FnZW50  # apikeyforgocarsestingagent
  ENCRYPTION_KEY: ZW5jcnlwdGlvbmtleWZvcnNlbnNpdGl2ZWRhdGE=  # encryptionkeyforsensitivedata

---
# Secret for database credentials
apiVersion: v1
kind: Secret
metadata:
  name: database-secrets
  namespace: gocars-testing
  labels:
    app: gocars-testing-agent
type: Opaque
data:
  mongodb-username: YWRtaW4=  # admin
  mongodb-password: dGVzdGluZ3Bhc3N3b3Jk  # testingpassword
  postgres-username: cG9zdGdyZXM=  # postgres
  postgres-password: cGFzc3dvcmQ=  # password
  redis-password: dGVzdGluZ3Bhc3N3b3Jk  # testingpassword

---
# Secret for external service integrations
apiVersion: v1
kind: Secret
metadata:
  name: external-service-secrets
  namespace: gocars-testing
  labels:
    app: gocars-testing-agent
type: Opaque
data:
  # Firebase configuration (base64 encoded)
  FIREBASE_SERVICE_ACCOUNT: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiZ29jYXJzLXRlc3RpbmciCn0=
  
  # Slack webhook for notifications
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVDAwMDAwMDAwL0IwMDAwMDAwMC94eHh4eHh4eHh4eHh4eHh4eHh4eA==
  
  # Email service credentials
  SMTP_USERNAME: dGVzdGluZ0Bnb2NhcnMuY29t  # testing@gocars.com
  SMTP_PASSWORD: ZW1haWxwYXNzd29yZA==  # emailpassword
  
  # Cloud storage credentials
  AWS_ACCESS_KEY_ID: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  # AKIAIOSFODNN7EXAMPLE
  AWS_SECRET_ACCESS_KEY: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  # wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
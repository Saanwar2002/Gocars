# Deployment for GoCars Testing Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testing-agent
  namespace: gocars-testing
  labels:
    app: gocars-testing-agent
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: gocars-testing-agent
  template:
    metadata:
      labels:
        app: gocars-testing-agent
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: testing-agent-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: testing-agent
        image: gocars/testing-agent:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: PORT
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: METRICS_PORT
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: REDIS_URL
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: MONGODB_URL
        - name: POSTGRES_URL
          valueFrom:
            configMapKeyRef:
              name: testing-agent-config
              key: POSTGRES_URL
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: testing-agent-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: testing-agent-secrets
              key: JWT_SECRET
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: testing-agent-secrets
              key: API_KEY
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: test-data
          mountPath: /app/test-data
        - name: logs
          mountPath: /app/logs
        - name: reports
          mountPath: /app/reports
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: app-config
        configMap:
          name: testing-agent-app-config
      - name: test-data
        persistentVolumeClaim:
          claimName: test-data-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: reports
        persistentVolumeClaim:
          claimName: reports-pvc
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "testing-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gocars-testing-agent
              topologyKey: kubernetes.io/hostname